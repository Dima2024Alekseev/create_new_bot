const User = require('../models/User');
const { paymentDetails, formatDate, formatDuration } = require('../utils/helpers');
const { checkAdmin } = require('./adminController');
const { Markup } = require('telegraf');

exports.handleStart = async (ctx) => {
  const { id, first_name } = ctx.from;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞
  if (id === parseInt(process.env.ADMIN_ID) && checkAdmin(ctx)) {
    return ctx.replyWithMarkdown(
      'üëã *–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å*\n\n' +
      '–ö–æ–º–∞–Ω–¥—ã:\n' +
      '/check - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫–∏\n' +
      '/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n' +
      '/questions - –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã\n' +
      '/switchmode - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫–∏', callback_data: 'check_payments_admin' }],
            [{ text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'show_stats_admin' }],
            [{ text: '–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data: 'list_questions' }],
            [{ text: '–°–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º', callback_data: 'switch_mode' }]
          ]
        }
      }
    );
  }

  // –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const user = await User.findOne({ userId: id });

  let message = '';
  let keyboardButtons = [];

  // –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞—è –∏–ª–∏ –æ–∂–∏–¥–∞—é—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
  const hasActiveOrPendingSubscription = user?.status === 'active' || user?.status === 'pending';

  if (user?.status === 'active' && user.expireDate) {
    const timeLeft = user.expireDate.getTime() - new Date().getTime();
    
    message = `‚úÖ *–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ ${formatDate(user.expireDate, true)}*`;
    if (timeLeft > 0) {
        message += `\n–û—Å—Ç–∞–ª–æ—Å—å: ${formatDuration(timeLeft)}.`;
    } else {
        message += `\n–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç—ë–∫.`;
    }
    
    keyboardButtons.push([{ text: 'üóì –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'extend_subscription' }]);
  } else {
    // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç, –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –∏–ª–∏ –≤ –¥—Ä—É–≥–æ–º —Å—Ç–∞—Ç—É—Å–µ
    message = `üîê *VPN –ø–æ–¥–ø–∏—Å–∫–∞: ${process.env.VPN_PRICE || 132} —Ä—É–±/–º–µ—Å*\n\n` +
              `${paymentDetails(id, first_name)}\n\n` +
              '_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞_';
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è/–æ–∂–∏–¥–∞—é—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
  if (hasActiveOrPendingSubscription) {
    keyboardButtons.push(
      [{ text: 'üóì –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'check_subscription' }]
    );
  }

  // –ö–Ω–æ–ø–∫–∞ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å" –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
  keyboardButtons.push(
    [{ text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: 'ask_question' }]
  );

  ctx.replyWithMarkdown(
    message,
    { 
      disable_web_page_preview: true,
      reply_markup: {
        inline_keyboard: keyboardButtons
      }
    }
  );
};

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
exports.checkSubscriptionStatus = async (ctx) => {
  const { id, first_name } = ctx.from;
  const user = await User.findOne({ userId: id });

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∑–≤–∞–ª callback –±–µ–∑ –∫–Ω–æ–ø–∫–∏
  if (!user || (user.status !== 'active' && user.status !== 'pending')) {
    await ctx.replyWithMarkdown(
      `–í—ã –ø–æ–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É. VPN –ø–æ–¥–ø–∏—Å–∫–∞: *${process.env.VPN_PRICE || 132} —Ä—É–±/–º–µ—Å*\n\n` +
      `${paymentDetails(id, first_name)}\n\n` +
      '_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞_',
      { disable_web_page_preview: true }
    );
    return ctx.answerCbQuery(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º
  }

  if (user?.status === 'active' && user.expireDate) {
    const timeLeft = user.expireDate.getTime() - new Date().getTime();
    
    let message = `‚úÖ *–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ ${formatDate(user.expireDate, true)}*`;
    if (timeLeft > 0) {
      message += `\n–û—Å—Ç–∞–ª–æ—Å—å: ${formatDuration(timeLeft)}.`;
    } else {
      message += `\n–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç—ë–∫.`;
    }
    
    await ctx.replyWithMarkdown(message);
  } else if (user?.status === 'pending') {
    await ctx.reply('‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
  } else if (user?.status === 'rejected') {
    await ctx.reply('‚ùå –í–∞—à–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç.');
  } else {
    // –≠—Ç–æ—Ç –±–ª–æ–∫ –ø–æ –∏–¥–µ–µ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç, —Ç.–∫. –º—ã —É–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã—à–µ
    // –ù–æ –æ—Å—Ç–∞–≤–∏–º –µ–≥–æ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
    await ctx.replyWithMarkdown(
      `–í—ã –ø–æ–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É. VPN –ø–æ–¥–ø–∏—Å–∫–∞: *${process.env.VPN_PRICE || 132} —Ä—É–±/–º–µ—Å*\n\n` +
      `${paymentDetails(id, first_name)}\n\n` +
      '_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞_',
      { disable_web_page_preview: true }
    );
  }
  await ctx.answerCbQuery(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" (–º–æ–∂–Ω–æ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ /start)
exports.extendSubscription = async (ctx) => {
  const { id, first_name } = ctx.from;
  await ctx.replyWithMarkdown(
    `–î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã.\n\n` +
    `üîê *VPN –ø–æ–¥–ø–∏—Å–∫–∞: ${process.env.VPN_PRICE || 132} —Ä—É–±/–º–µ—Å*\n\n` +
    `${paymentDetails(id, first_name)}\n\n` +
    '_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞_',
    { disable_web_page_preview: true }
  );
  await ctx.answerCbQuery();
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
exports.promptForQuestion = async (ctx) => {
  await ctx.reply('‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. –Ø –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
  await ctx.answerCbQuery();
};