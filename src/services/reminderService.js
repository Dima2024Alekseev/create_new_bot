const cron = require('node-cron');
const User = require('../models/User');
const Question = require('../models/Question');
const { paymentDetails, formatDate } = require('../utils/helpers');

exports.setupReminders = (bot) => {
  // –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–∫–æ—Ä–æ–º –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ 10:00 –ø–æ –ú–æ—Å–∫–≤–µ
  // (–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ –≤–∞—à–µ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞,
  // –≥–¥–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –±–æ—Ç, –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —ç—Ç–æ –±—ã–ª–æ 10:00 —É—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞)
  cron.schedule('0 10 * * *', async () => {
    console.log('[Cron] –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö –∏ –≤–æ–ø—Ä–æ—Å–∞—Ö...');
    try {
      const now = new Date(); // –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –æ—Ç—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏

      // 1. –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–∫–æ—Ä–æ–º –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
      // –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ REMIND_DAYS
      // –∏ –∫–æ—Ç–æ—Ä—ã–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å —Å–µ–≥–æ–¥–Ω—è (–∏–ª–∏ –≤–æ–æ–±—â–µ)
      const expiringUsers = await User.find({
        status: 'active',
        expireDate: {
          $lte: new Date(now.getTime() + process.env.REMIND_DAYS * 86400000), // –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è <= (—Å–µ–π—á–∞—Å + REMIND_DAYS –¥–Ω–µ–π)
          $gt: now                                                        // –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è > (—Å–µ–π—á–∞—Å)
        },
        $or: [
          { lastReminder: { $exists: false } },                           // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å
          { lastReminder: { $lt: new Date(now.getTime() - 86400000) } }    // –ò–ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥
        ]
      });

      console.log(`[Cron] –ù–∞–π–¥–µ–Ω–æ ${expiringUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ç–µ–∫–∞—é—â–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π.`);

      for (const user of expiringUsers) {
        try {
          const daysLeft = Math.ceil((user.expireDate - now) / 86400000);

          await bot.telegram.sendMessage(
            user.userId,
            `‚ö†Ô∏è *–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ${daysLeft} –¥–Ω–µ–π!*\n\n` +
            `–ü—Ä–æ–¥–ª–∏—Ç–µ VPN –∑–∞ ${process.env.VPN_PRICE} —Ä—É–±.\n\n` +
            paymentDetails(user.userId, user.firstName || user.username), // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            { parse_mode: 'Markdown', disable_web_page_preview: true } // –î–æ–±–∞–≤–∏–ª disable_web_page_preview
          );

          await User.updateOne(
            { userId: user.userId },
            { lastReminder: now } // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
          );
          console.log(`[Cron] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.userId}.`);
        } catch (e) {
          console.error(`[Cron] –û—à–∏–±–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è ${user.userId}:`, e.message);
        }
      }

      // 2. –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö (–¥–ª—è –∞–¥–º–∏–Ω–∞)
      const pendingQuestions = await Question.countDocuments({
        status: 'pending',
        createdAt: { $gt: new Date(now.getTime() - 7 * 86400000) } // –¢–æ–ª—å–∫–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
      });

      if (pendingQuestions > 0) {
        await bot.telegram.sendMessage(
          process.env.ADMIN_ID,
          `üîî –£ –≤–∞—Å ${pendingQuestions} –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤!\n` +
          `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /questions –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞\n` +
          `–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å: ${formatDate(now)}`
        );
        console.log(`[Cron] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ ${pendingQuestions} –≤–æ–ø—Ä–æ—Å–∞—Ö.`);
      }

    } catch (err) {
      console.error('[Cron] –û—à–∏–±–∫–∞ –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∑–∞–¥–∞—á–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:', err);
    }
  });

  // –ù–û–í–ê–Ø –ó–ê–î–ê–ß–ê: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∞ –£–ñ–ï –ò–°–¢–ï–ö–õ–ê
  // –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 –ø–æ –ú–æ—Å–∫–≤–µ (—á–µ—Ä–µ–∑ —á–∞—Å –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏)
  cron.schedule('0 11 * * *', async () => {
    console.log('[Cron] –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫...');
    try {
      const now = new Date(); // –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –æ—Ç—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏

      const expiredUsers = await User.find({
        status: 'active', // –ò—â–µ–º —Ç–µ—Ö, –∫—Ç–æ –≤—Å–µ –µ—â–µ 'active'
        expireDate: { $lte: now } // –ù–æ –∏—Ö –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ –∏–ª–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
      });

      console.log(`[Cron] –ù–∞–π–¥–µ–Ω–æ ${expiredUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ç–µ–∫—à–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π.`);

      for (const user of expiredUsers) {
        try {
          await bot.telegram.sendMessage(
            user.userId,
            `üö´ *–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ VPN –∏—Å—Ç–µ–∫–ª–∞!*` +
            `\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.` +
            `\n\n–ü—Ä–æ–¥–ª–∏—Ç–µ VPN –∑–∞ ${process.env.VPN_PRICE} —Ä—É–±.\n\n` +
            paymentDetails(user.userId, user.firstName || user.username), // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            { parse_mode: 'Markdown', disable_web_page_preview: true }
          );
          await User.updateOne(
            { userId: user.userId },
            {
              status: 'inactive', // –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π
              lastReminder: now // –û–±–Ω–æ–≤–ª—è–µ–º lastReminder, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
            }
          );
          console.log(`[Cron] –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.userId} –∏—Å—Ç–µ–∫–ª–∞, —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 'inactive'.`);
          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è VPN –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ –≤–∞—à VPN-—Å–µ—Ä–≤–µ—Ä, –µ—Å–ª–∏ —Ç–∞–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –µ—Å—Ç—å
          // –ù–∞–ø—Ä–∏–º–µ—Ä: await vpnService.revokeAccess(user.userId);
        } catch (e) {
          console.error(`[Cron] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏—Å—Ç–µ–∫—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è ${user.userId}:`, e.message);
        }
      }
    } catch (err) {
      console.error('[Cron] –û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫:', err);
    }
  });

  // –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞ –æ –≤–∞–∂–Ω—ã—Ö (—Å—Ç–∞—Ä—ã—Ö) –≤–æ–ø—Ä–æ—Å–∞—Ö (–¥–ª—è –∞–¥–º–∏–Ω–∞)
  cron.schedule('0 */3 * * *', async () => {
    console.log('[Cron] –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –≤–æ–ø—Ä–æ—Å–∞—Ö...');
    try {
      const now = new Date();
      const urgentQuestions = await Question.countDocuments({
        status: 'pending',
        createdAt: { $lt: new Date(now.getTime() - 86400000) } // –í–æ–ø—Ä–æ—Å—ã —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
      });

      if (urgentQuestions > 0) {
        await bot.telegram.sendMessage(
          process.env.ADMIN_ID,
          `üö® –°—Ä–æ—á–Ω–æ! ${urgentQuestions} –≤–æ–ø—Ä–æ—Å–æ–≤ –∂–¥—É—Ç –æ—Ç–≤–µ—Ç–∞ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤!`
        );
        console.log(`[Cron] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ ${urgentQuestions} —Å—Ä–æ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö.`);
      }
    } catch (err) {
      console.error('[Cron] –û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:', err);
    }
  });

  console.log('‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è cron –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã.');
};