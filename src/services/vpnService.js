// src/services/vpnService.js
const axios = require('axios');
const tough = require('tough-cookie');
const { wrapper } = require('axios-cookiejar-support');

// –°–æ–∑–¥–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∫—É–∫–∏
const cookieJar = new tough.CookieJar();

// –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä axios
const api = wrapper(axios.create({
    baseURL: process.env.WG_API_URL,
    jar: cookieJar,
    withCredentials: true,
}));

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Ö–æ–¥ –≤ API wg-easy
 */
const login = async () => {
    try {
        await api.post('/api/session', {
            password: process.env.WG_API_PASSWORD
        });
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.response?.data || error.message);
        throw new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ WG-Easy API');
    }
};

/**
 * –°–æ–∑–¥–∞–µ—Ç VPN-–∫–ª–∏–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
 */
exports.createVpnClient = async (clientName) => {
    try {
        await login();
        
        console.log('‚åõ –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞:', clientName);
        const createResponse = await api.post('/api/wireguard/client', {
            name: clientName,
            allowedIPs: '10.8.0.0/24'
        });

        const responseData = createResponse.data;
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ—Å–∫–æ–ª—å–∫—É –≤ –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç ID, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞–∫ ID
        const clientId = responseData.name;
        
        if (!clientId) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞.');
        }

        console.log('üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞–∫ ID:', clientId);

        console.log('‚åõ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è ID:', clientId);
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –≤ URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        const configResponse = await api.get(
            `/api/wireguard/client/${clientId}/configuration`,
            { responseType: 'text' }
        );

        return configResponse.data;

    } catch (error) {
        console.error('üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', {
            message: error.message,
            stack: error.stack,
            response: error.response?.data
        });
        
        throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è VPN-–∫–ª–∏–µ–Ω—Ç–∞: ${error.message}`);
    }
};