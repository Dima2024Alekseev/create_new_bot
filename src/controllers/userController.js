const User = require('../models/User');
const { paymentDetails, formatDate, formatDuration } = require('../utils/helpers');
const { Markup } = require('telegraf');
const { checkAdmin } = require('../utils/auth');

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∞–¥–º–∏–Ω–∞.
 * –ò–∑–º–µ–Ω–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞" –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.handleStart = async (ctx) => {
  const { id, first_name, username } = ctx.from;

  // === –õ–û–ì–ò–ö–ê –î–õ–Ø –ê–î–ú–ò–ù–ê ===
  if (id === parseInt(process.env.ADMIN_ID) && checkAdmin(ctx)) {
    return ctx.replyWithMarkdown(
      'üëã *–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å*\n\n',
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫–∏', callback_data: 'check_payments_admin' }],
            [{ text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'show_stats_admin' }],
            [{ text: '–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data: 'list_questions' }]
          ]
        }
      }
    );
  }

  // === –õ–û–ì–ò–ö–ê –î–õ–Ø –û–ë–´–ß–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===
  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ "–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞"
  const safeFirstName = first_name ? first_name : '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è
  const message = `–ü—Ä–∏–≤–µ—Ç, ${safeFirstName}! üëã\n\n` +
    `–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–µ–π VPN –ø–æ–¥–ø–∏—Å–∫–æ–π –∏ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É.`;

  const keyboardButtons = [
    [{ text: 'üë§ –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞', callback_data: 'my_subscription' }], // –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê
    [{ text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: 'ask_question' }]
  ];

  ctx.replyWithMarkdown(
    message,
    {
      disable_web_page_preview: true,
      reply_markup: {
        inline_keyboard: keyboardButtons
      }
    }
  );
};

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç).
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.showMySubscription = async (ctx) => {
  const { id, first_name, username } = ctx.from;
  const user = await User.findOne({ userId: id });

  let message = '';
  let keyboardButtons = [];

  if (!user || user.status === 'inactive' || user.status === 'rejected') {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –µ–≥–æ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∏–ª–∏ –æ–Ω –Ω–æ–≤—ã–π
    message = `üîê *VPN –ø–æ–¥–ø–∏—Å–∫–∞: ${process.env.VPN_PRICE || 132} —Ä—É–±/–º–µ—Å*\n\n` +
      `–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ –æ–Ω–∞ –∏—Å—Ç–µ–∫–ª–∞/–±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n` +
      `${paymentDetails(id, first_name || username)}\n\n` + // –ò—Å–ø–æ–ª—å–∑—É–µ–º first_name –∏–ª–∏ username –¥–ª—è paymentDetails
      '_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç._';

    keyboardButtons.push(
      [{ text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: 'ask_question' }]
    );

  } else if (user.status === 'pending') {
    // –ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
    message = `‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.`;
    keyboardButtons.push(
      [{ text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: 'ask_question' }]
    );

  } else if (user.status === 'active' && user.expireDate) {
    // –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
    const timeLeft = user.expireDate.getTime() - new Date().getTime();

    message = `‚úÖ *–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ ${formatDate(user.expireDate, true)}*`;
    if (timeLeft > 0) {
      message += `\n–û—Å—Ç–∞–ª–æ—Å—å: ${formatDuration(timeLeft)}.`;
    } else {
      // –≠—Ç–∞ –≤–µ—Ç–∫–∞ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ cron –µ—â—ë –Ω–µ —É—Å–ø–µ–ª –ø–æ–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å,
      // –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ —Ä–∞–≤–Ω–æ —É–≤–∏–¥–∏—Ç, —á—Ç–æ —Å—Ä–æ–∫ –∏—Å—Ç–µ–∫.
      message += `\n–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç—ë–∫.`;
    }

    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboardButtons.push(
      [{ text: 'üóì –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'extend_subscription' }]
    );

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –ò–õ–ò –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    // –î–æ–±–∞–≤–ª–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ: –µ—Å–ª–∏ vpnConfigured –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ false.
    if ((!user.subscriptionCount || user.subscriptionCount === 1) || !user.vpnConfigured) {
      keyboardButtons.push([{ text: 'üìÅ –ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', callback_data: `send_vpn_info_${id}` }]);
    }

    keyboardButtons.push(
      [{ text: 'üö´ –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'cancel_subscription_confirm' }],
      [{ text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: 'ask_question' }]
    );
  } else {
    // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∏–ª–∏ –æ—à–∏–±–∫–∞
    message = '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.';
    keyboardButtons.push(
      [{ text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: 'ask_question' }]
    );
  }

  await ctx.replyWithMarkdown(message, {
    disable_web_page_preview: true,
    reply_markup: {
      inline_keyboard: keyboardButtons
    }
  });

  if (ctx.callbackQuery) {
    await ctx.answerCbQuery(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º spinning wheel –Ω–∞ –∫–Ω–æ–ø–∫–µ
  }
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏.
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.extendSubscription = async (ctx) => {
  const { id, first_name, username } = ctx.from;
  await ctx.replyWithMarkdown(
    `–î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è VPN –∑–∞ ${process.env.VPN_PRICE} —Ä—É–±. –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏:\n\n` +
    paymentDetails(id, first_name || username) +
    '\n\n_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç._',
    { disable_web_page_preview: true }
  );
  await ctx.answerCbQuery();
};

/**
 * –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.promptForQuestion = async (ctx) => {
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", –º—ã –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º awaitingAnswerFor –∑–¥–µ—Å—å
  // –≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ middleware, –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç.
  await ctx.reply('‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
  if (ctx.callbackQuery) {
    await ctx.answerCbQuery();
  }
};

/**
 * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.requestVpnInfo = async (ctx) => {
  const userId = parseInt(ctx.match[1]); // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
  const user = await User.findOne({ userId });

  if (!user) {
    await ctx.reply('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return ctx.answerCbQuery();
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –¥–µ–ª–∞–µ—Ç —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∞ –Ω–µ –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π
  if (ctx.from.id !== userId) {
    return ctx.answerCbQuery('üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞ (–¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞)
  ctx.session.awaitingVpnFileFor = userId;
  ctx.session.awaitingVpnVideoFor = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å —Ñ–∞–π–ª–∞

  // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ –∑–∞–ø—Ä–æ—Å–µ
  await ctx.telegram.sendMessage(
    process.env.ADMIN_ID,
    `üîî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.firstName || user.username} (ID: ${userId}) –∑–∞–ø—Ä–æ—Å–∏–ª —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VPN –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é. ` +
    `–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.`,
    Markup.inlineKeyboard([
      [Markup.button.callback('‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∏ –≤–∏–¥–µ–æ', `send_instruction_to_${userId}`)]
    ])
  );

  await ctx.reply('‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ.');
  await ctx.answerCbQuery();
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —É—Å–ø–µ—à–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.handleVpnConfigured = async (ctx) => {
  const userId = parseInt(ctx.match[1]);

  if (ctx.from.id !== userId) {
    return ctx.answerCbQuery('üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
  }

  try {
    await User.findOneAndUpdate(
      { userId },
      { vpnConfigured: true }, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ VPN –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      { new: true }
    );
    await ctx.reply('üéâ –û—Ç–ª–∏—á–Ω–æ! –†–∞–¥—ã, —á—Ç–æ VPN —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!');
    await ctx.deleteMessage(); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª"/"–ù–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è"
    await ctx.answerCbQuery('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.');
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, error);
    await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞.');
  }
};

/**
 * –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π VPN.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.promptVpnFailure = async (ctx) => {
  const userId = parseInt(ctx.match[1]);

  if (ctx.from.id !== userId) {
    return ctx.answerCbQuery('üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
  }

  await ctx.reply('‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π VPN. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º.');
  ctx.session.awaitingVpnTroubleshoot = userId; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  await ctx.deleteMessage(); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª"/"–ù–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è"
  await ctx.answerCbQuery('–û–∂–∏–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.');
};

/**
 * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.promptCancelSubscription = async (ctx) => {
  const userId = ctx.from.id;
  await ctx.reply(
    '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?\n\n' +
    '–í–∞—à VPN –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.',
    Markup.inlineKeyboard([
      Markup.button.callback('‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å', 'cancel_subscription_final'),
      Markup.button.callback('‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å', 'cancel_subscription_abort')
    ])
  );
  await ctx.answerCbQuery();
};

/**
 * –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–º–µ–Ω—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.cancelSubscriptionFinal = async (ctx) => {
  const userId = ctx.from.id;
  try {
    const user = await User.findOneAndUpdate(
      { userId },
      { status: 'inactive', expireDate: new Date() }, // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è
      { new: true }
    );
    if (user) {
      await ctx.reply('‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞. VPN –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω.');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ VPN-—Å–µ—Ä–≤–µ—Ä–µ
      // –ù–∞–ø—Ä–∏–º–µ—Ä: await vpnService.revokeAccess(userId);
      console.log(`–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ—Ç–º–µ–Ω–µ–Ω–∞.`);
    } else {
      await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    }
    await ctx.deleteMessage(); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–º–µ–Ω—ã
    await ctx.answerCbQuery('–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, error);
    await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ.');
  }
};

/**
 * –û—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.cancelSubscriptionAbort = async (ctx) => {
  await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
  await ctx.deleteMessage(); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–º–µ–Ω—ã
  await ctx.answerCbQuery('–û—Ç–º–µ–Ω–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏.');
};

// –ù–µ—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å, –æ—Å—Ç–∞–≤—å—Ç–µ –∏—Ö –∑–¥–µ—Å—å)
// function someHelperFunction() { ... }