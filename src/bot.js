require('dotenv').config({ path: __dirname + '/../primer.env' });

const { Telegraf, session, Markup } = require('telegraf');
const LocalSession = require('telegraf-session-local');
const connectDB = require('./config/db');
const User = require('./models/User'); 

// –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
const { 
    handleStart, 
    checkSubscriptionStatus, 
    extendSubscription, 
    promptForQuestion, 
    requestVpnInfo, 
    handleVpnConfigured, 
    promptVpnFailure, 
    cancelSubscriptionFinal, 
    promptCancelSubscription, 
    cancelSubscriptionAbort 
} = require('./controllers/userController'); 

const { handlePhoto, handleApprove, handleReject } = require('./controllers/paymentController');
const { checkAdminMenu, checkPayments, stats } = require('./controllers/adminController'); 
const { handleQuestion, handleAnswer, listQuestions } = require('./controllers/questionController');
const { setupReminders } = require('./services/reminderService');
const { checkAdmin } = require('./utils/auth');
const { escapeMarkdown } = require('./utils/helpers'); // –î–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö

const bot = new Telegraf(process.env.BOT_TOKEN, {
    telegram: {
        agent: null, // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ null –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω —Å–≤–æ–π
        handshakeTimeout: 30000
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
bot.use((new LocalSession({ database: 'session_db.json' })).middleware());

connectDB().catch(err => {
    console.error('‚ùå MongoDB connection failed:', err);
    process.exit(1); 
});

// --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –±–æ—Ç–∞ ---
process.on('unhandledRejection', (reason, promise) => {
    console.error('‚ö†Ô∏è Unhandled Rejection at:', promise, 'reason:', reason);
    console.error('Stack trace:', reason instanceof Error ? reason.stack : reason); 
    // –ü–æ–ø—ã—Ç–∫–∞ —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞, –Ω–æ –±–µ–∑ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
    bot.telegram.sendMessage(
        process.env.ADMIN_ID, 
        `üö® *Unhandled Rejection –≤ –±–æ—Ç–µ:*\n` +
        `–ü—Ä–∏—á–∏–Ω–∞: ${escapeMarkdown(String(reason))}\n` + // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –∏ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º
        `\`\`\`\n${escapeMarkdown(reason instanceof Error ? reason.stack : 'No stack trace available')}\n\`\`\``, 
        { parse_mode: 'Markdown' }
    ).catch(e => console.error("Error sending unhandled rejection to admin:", e));
});

process.on('uncaughtException', async (err) => {
    console.error('‚ö†Ô∏è Uncaught Exception:', err);
    console.error('Stack trace:', err.stack); 
    try {
        await bot.telegram.sendMessage(
            process.env.ADMIN_ID, 
            `üö® *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞: ${escapeMarkdown(err.message)}*\n` +
            `\`\`\`\n${escapeMarkdown(err.stack)}\n\`\`\``, 
            { parse_mode: 'Markdown' }
        ).catch(e => console.error("Error sending uncaught exception to admin:", e));
    } catch (e) {
        console.error("Failed to send uncaught exception to admin:", e);
    }
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ –∏ –≤—ã—Ö–æ–¥–∏–º, —Ç–∞–∫ –∫–∞–∫ Uncaught Exception —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ñ–∞—Ç–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É
    await bot.stop().catch(e => console.error("Error stopping bot on uncaught exception:", e));
    process.exit(1);
});

// --- Middleware –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –ê–î–ú–ò–ù–ê, –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–±–ª–µ–º ---
bot.use(async (ctx, next) => {
    // console.log(`[Middleware Debug] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: ${ctx.from?.id}`);
    // console.log(`[Middleware Debug] awaitingAnswerFor: ${ctx.session?.awaitingAnswerFor}`);
    // console.log(`[Middleware Debug] awaitingVpnFileFor: ${ctx.session?.awaitingVpnFileFor}`);
    // console.log(`[Middleware Debug] awaitingVpnVideoFor: ${ctx.session?.awaitingVpnVideoFor}`);
    // console.log(`[Middleware Debug] awaitingAnswerVpnIssueFor: ${ctx.session?.awaitingAnswerVpnIssueFor}`);
    // console.log(`[Middleware Debug] awaitingVpnTroubleshoot: ${ctx.session?.awaitingVpnTroubleshoot}`);
    // console.log(`[Middleware Debug] –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: ${ctx.message ? Object.keys(ctx.message).join(', ') : 'No message object'}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω
    if (checkAdmin(ctx)) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (ctx.session?.awaitingAnswerFor && ctx.message?.text) {
            console.log(`[AdminMiddleware] –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.session.awaitingAnswerFor}`);
            await handleAnswer(ctx); 
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥-—Ñ–∞–π–ª–∞ VPN –∞–¥–º–∏–Ω–æ–º
        if (ctx.session?.awaitingVpnFileFor && ctx.message?.document) {
            const targetUserId = ctx.session.awaitingVpnFileFor;
            try {
                console.log(`[AdminMiddleware] –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}`);
                await ctx.telegram.sendDocument(targetUserId, ctx.message.document.file_id, {
                    caption: 'üìÅ –í–∞—à —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VPN:'
                });
                await ctx.reply(`‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}.`);

                ctx.session.awaitingVpnFileFor = null;
                ctx.session.awaitingVpnVideoFor = targetUserId; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∂–∏–¥–∞–Ω–∏—é –≤–∏–¥–µ–æ
                await ctx.reply(`–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${targetUserId}):`);
                return;
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}:`, error);
                await ctx.reply(`‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}.`);
                ctx.session.awaitingVpnFileFor = null;
                ctx.session.awaitingVpnVideoFor = null;
                return;
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–æ–º
        if (ctx.session?.awaitingVpnVideoFor && ctx.message?.video) {
            const targetUserId = ctx.session.awaitingVpnVideoFor;
            try {
                console.log(`[AdminMiddleware] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}`);
                await ctx.telegram.sendVideo(targetUserId, ctx.message.video.file_id, {
                    caption: 'üé¨ –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN:'
                });
                await ctx.reply(`‚úÖ –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}.`);

                // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                await ctx.telegram.sendMessage(
                    targetUserId,
                    '–ï—Å–ª–∏ –≤—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ VPN, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:',
                    Markup.inlineKeyboard([
                        [
                            Markup.button.callback('‚úÖ –£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª', `vpn_configured_${targetUserId}`),
                            Markup.button.callback('‚ùå –ù–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π', `vpn_failed_${targetUserId}`)
                        ]
                    ])
                );

            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}:`, error);
                await ctx.reply(`‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}.`);
            } finally {
                ctx.session.awaitingVpnVideoFor = null; 
            }
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∞ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É —Å VPN
        if (ctx.session?.awaitingAnswerVpnIssueFor && ctx.message?.text) {
            const targetUserId = ctx.session.awaitingAnswerVpnIssueFor;
            const adminAnswer = ctx.message.text;
            
            try {
                await ctx.telegram.sendMessage(
                    targetUserId,
                    `üõ†Ô∏è *–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π VPN:*\n\n` +
                    `"${escapeMarkdown(adminAnswer)}"`,
                    { parse_mode: 'Markdown' }
                );
                await ctx.reply(`‚úÖ –í–∞—à –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}.`);
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É VPN –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}:`, error);
                await ctx.reply(`‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞.`);
            } finally {
                ctx.session.awaitingAnswerVpnIssueFor = null; 
            }
            return;
        }

        // –ï—Å–ª–∏ –∞–¥–º–∏–Ω –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
        if (ctx.message?.text && !ctx.message.text.startsWith('/')) {
            console.log(`[AdminMiddleware] –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–∂–∏–¥–∞–Ω–∏—è. –¢–µ–∫—Å—Ç: ${ctx.message.text}`);
            // –ú–æ–∂–Ω–æ –∑–¥–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ –Ω–µ –æ–∂–∏–¥–∞–ª—Å—è —Ç–∞–∫–æ–π –≤–≤–æ–¥"
            // await ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ –≤–≤–æ–¥. –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∞ –∫–æ–º–∞–Ω–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /');
            return next(); // –ü–µ—Ä–µ–¥–∞—Ç—å –¥–∞–ª—å—à–µ, –≤–¥—Ä—É–≥ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        }
    }

    // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å VPN –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    if (ctx.session?.awaitingVpnTroubleshoot === ctx.from.id && ctx.message?.text) {
        const userId = ctx.from.id;
        const problemDescription = ctx.message.text;
        const user = await User.findOne({ userId }); 

        let userName = user?.firstName || user?.username || '–ë–µ–∑ –∏–º–µ–Ω–∏';
        if (user?.username) {
            userName = `${userName} (@${escapeMarkdown(user.username)})`; // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º username
        } else {
            userName = escapeMarkdown(userName); // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º firstName, –µ—Å–ª–∏ –Ω–µ—Ç username
        }

        await ctx.telegram.sendMessage(
            process.env.ADMIN_ID,
            `üö® *–ü—Ä–æ–±–ª–µ–º–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π VPN –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName} (ID: ${userId}):*\n\n` +
            `"${escapeMarkdown(problemDescription)}"`, // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
            {
                parse_mode: 'Markdown',
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '‚û°Ô∏è –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', callback_data: `answer_vpn_issue_${userId}` }]
                    ]
                }
            }
        );
        
        await ctx.reply('‚úÖ –í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.');
        
        ctx.session.awaitingVpnTroubleshoot = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è
        return; 
    }

    // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    if (ctx.session?.awaitingQuestion && ctx.message?.text && !ctx.message.text.startsWith('/')) {
        console.log(`[UserMiddleware] –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from.id}`);
        await handleQuestion(ctx);
        ctx.session.awaitingQuestion = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞
        return;
    }


    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∏ –æ–¥–Ω–∏–º –∏–∑ middlewares, –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ
    return next(); 
});


// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

bot.start(async (ctx) => {
    if (checkAdmin(ctx)) {
        await checkAdminMenu(ctx); 
    } else {
        await handleStart(ctx); 
    }
});

// –û—Ç–∫–ª—é—á–∞–µ–º –æ–±—â—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–≤–æ–¥
// –¢–µ–ø–µ—Ä—å –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ middleware –≤—ã—à–µ
bot.on('text', async (ctx, next) => {
    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '/', —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞, –∏ middleware –Ω–µ –¥–æ–ª–∂–µ–Ω –µ—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
    if (ctx.message.text.startsWith('/')) {
        return next(); 
    }
    // –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ —Å—é–¥–∞, –∏ —Ç–µ–∫—Å—Ç –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω middleware (—á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –Ω–µ –±—ã–ª–æ
    // —Å–æ—Å—Ç–æ—è–Ω–∏—è 'awaitingQuestion', 'awaitingVpnTroubleshoot', –∏–ª–∏ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è),
    // —Ç–æ —ç—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç. –ú–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å.
    // console.log(`[bot.on('text')] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç ${ctx.from.id}: ${ctx.message.text}`);
    // await ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ /start.');
    return next(); // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–∞
});


// –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
bot.command('admin', checkAdminMenu); 
bot.command('check', checkPayments);
bot.command('stats', stats);
bot.command('questions', listQuestions); 


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π (—Ñ–æ—Ç–æ)
bot.on('photo', handlePhoto);


// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ (callback_data) ---

// –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∞
bot.action(/approve_(\d+)/, handleApprove);
bot.action(/reject_(\d+)/, handleReject);
bot.action('list_questions', listQuestions);
bot.action('check_payments_admin', checkPayments);
bot.action('show_stats_admin', stats);
bot.action('refresh_stats', stats); 

bot.action(/answer_(\d+)/, async (ctx) => {
    if (!checkAdmin(ctx)) { 
        return ctx.answerCbQuery('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞');
    }
    ctx.session.awaitingAnswerFor = ctx.match[1];
    await ctx.reply('‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    await ctx.answerCbQuery();
});

bot.action(/send_instruction_to_(\d+)/, async (ctx) => {
    if (!checkAdmin(ctx)) { 
        return ctx.answerCbQuery('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞');
    }
    const targetUserId = ctx.match[1];
    ctx.session.awaitingVpnFileFor = targetUserId;
    ctx.session.awaitingVpnVideoFor = null; 
    await ctx.reply(`–ó–∞–≥—Ä—É–∑–∏—Ç–µ *—Ñ–∞–π–ª* –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, .ovpn) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${targetUserId}:`, { parse_mode: 'Markdown' });
    await ctx.answerCbQuery();
});

bot.action(/answer_vpn_issue_(\d+)/, async (ctx) => {
    if (!checkAdmin(ctx)) { 
      return ctx.answerCbQuery('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞');
    }
    const targetUserId = parseInt(ctx.match[1]);
    ctx.session.awaitingAnswerVpnIssueFor = targetUserId; 
    await ctx.reply(`‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${targetUserId} –ø–æ –µ–≥–æ –ø—Ä–æ–±–ª–µ–º–µ —Å VPN:`);
    await ctx.answerCbQuery();
});


// –ö–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.action('check_subscription', checkSubscriptionStatus);
bot.action('ask_question', promptForQuestion);
bot.action('extend_subscription', extendSubscription);
bot.action(/send_vpn_info_(\d+)/, requestVpnInfo);
bot.action(/vpn_configured_(\d+)/, handleVpnConfigured);
bot.action(/vpn_failed_(\d+)/, promptVpnFailure); 

// --- –ù–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ ---
bot.action('cancel_subscription_confirm', promptCancelSubscription); 
bot.action('cancel_subscription_final', cancelSubscriptionFinal);   
bot.action('cancel_subscription_abort', cancelSubscriptionAbort);   


// --- –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ---
setupReminders(bot);


// --- –ó–∞–ø—É—Å–∫ ---
bot.launch()
    .then(() => console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (Q&A + Payments + WireGuard Integration)'))
    .catch(err => {
        console.error('üö® –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
        process.exit(1);
    });

// Graceful shutdown
['SIGINT', 'SIGTERM'].forEach(signal => {
    process.once(signal, async () => {
        console.log(`üõë –ü–æ–ª—É—á–µ–Ω ${signal}, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–∞...`);
        try {
            await bot.stop();
            console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            process.exit(0);
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:', err);
            process.exit(1);
        }
    });
});