// bot.js

// –û–ß–ï–ù–¨ –í–ê–ñ–ù–û: dotenv –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É primer.env —Ñ–∞–π–ª—É –≤–µ—Ä–µ–Ω –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç—Ç–æ–≥–æ bot.js —Ñ–∞–π–ª–∞.
// –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ primer.env –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞, –∞ bot.js –≤ –ø–∞–ø–∫–µ src/, —Ç–æ __dirname + '/../primer.env' - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å.
require('dotenv').config({ path: __dirname + '/../primer.env' });

// –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('DEBUG: BOT_TOKEN is:', process.env.BOT_TOKEN ? 'LOADED' : 'NOT LOADED');
console.log('DEBUG: ADMIN_ID is:', process.env.ADMIN_ID ? 'LOADED' : 'NOT LOADED');
console.log('DEBUG: WG_EASY_BASE_URL is:', process.env.WG_EASY_BASE_URL ? 'LOADED' : 'NOT LOADED');

const { Telegraf, session, Markup } = require('telegraf');
const LocalSession = require('telegraf-session-local');
const connectDB = require('./config/db'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î

// === –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
const {
  handleStart,
  checkSubscriptionStatus,
  extendSubscription,
  promptForQuestion,
  requestVpnInfo,
  handleVpnConfigured,
  handleUserReplyKeyboard, // –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ Reply Keyboard
  showUserQuestions       // –î–ª—è –∫–æ–º–∞–Ω–¥—ã /myquestions –∏ –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ –≤–æ–ø—Ä–æ—Å—ã"
} = require('./controllers/userController');

// === –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –æ–ø–ª–∞—Ç—ã ===
const { handlePhoto, handleApprove, handleReject } = require('./controllers/paymentController');

// === –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===
const { checkPayments, stats, checkAdmin } = require('./controllers/adminController');

// === –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤ ===
const { handleQuestion, handleAnswer, listQuestions } = require('./controllers/questionController');

// === –°–µ—Ä–≤–∏—Å—ã ===
const { setupReminders } = require('./services/reminderService');


// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN, {
  telegram: {
    agent: null, // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–∫—Å–∏, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è: new HttpsProxyAgent(process.env.PROXY_SOCKS5)
    handshakeTimeout: 30000 // –£–≤–µ–ª–∏—á—å—Ç–µ, –µ—Å–ª–∏ –Ω–∞–±–ª—é–¥–∞—é—Ç—Å—è —á–∞—Å—Ç—ã–µ —Ç–∞–π–º–∞—É—Ç—ã
  }
});

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ LocalSession –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.use((new LocalSession({ database: 'session_db.json' })).middleware());

// ===== –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê –ë–û–¢–ê =====
const startBot = async () => {
  try {
    // 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await connectDB();

    // 2. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ Telegram
    console.log('DEBUG: Attempting to launch bot...');
    await bot.launch();
    console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (Q&A + Payments)');

    // 3. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á CRON (–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π)
    setupReminders(bot);
    console.log('‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è cron –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã.');

  } catch (err) {
    // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ –ª—é–±–æ–º –∏–∑ —ç—Ç–∞–ø–æ–≤ –∑–∞–ø—É—Å–∫–∞, –ª–æ–≥–∏—Ä—É–µ–º –µ–µ –∏ –≤—ã—Ö–æ–¥–∏–º
    console.error('üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –ë–î:', err);
    process.exit(1); // –í—ã—Ö–æ–¥–∏–º —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏
  }
};

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
startBot();

// ===== –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ =====
process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ö†Ô∏è Unhandled Rejection at:', promise, 'reason:', reason);
  // –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
});

process.on('uncaughtException', async (err) => {
  console.error('‚ö†Ô∏è Uncaught Exception:', err);
  // –í —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏, –ø—ã—Ç–∞–µ–º—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
  try {
    await bot.stop();
    console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ Uncaught Exception');
  } catch (stopErr) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞ –ø–æ—Å–ª–µ Uncaught Exception:', stopErr);
  }
  process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
});


// ===== Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ =====
bot.use(async (ctx, next) => {
  // –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è Middleware
  console.log(`[Middleware Debug] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: ${ctx.from?.id}`);
  console.log(`[Middleware Debug] awaitingAnswerFor: ${ctx.session?.awaitingAnswerFor}`);
  console.log(`[Middleware Debug] awaitingVpnVideoFor: ${ctx.session?.awaitingVpnVideoFor}`);
  console.log(`[Middleware Debug] –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: ${Object.keys(ctx.message || {})}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
  if (ctx.from?.id === parseInt(process.env.ADMIN_ID)) {
    // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
    if (ctx.session?.awaitingAnswerFor && ctx.message?.text) {
      console.log(`[AdminMiddleware] –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.session.awaitingAnswerFor}`);
      await handleAnswer(ctx, ctx.session.awaitingAnswerFor, ctx.message.text);
      ctx.session.awaitingAnswerFor = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
      return; // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    }

    // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –í–ò–î–ï–û –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç –∞–¥–º–∏–Ω–∞ (—Ñ–∞–π–ª —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    // –≠—Ç–∞ –≤–µ—Ç–∫–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    if (ctx.session?.awaitingVpnVideoFor && ctx.message?.video) {
      const targetUserId = ctx.session.awaitingVpnVideoFor;
      try {
        console.log(`[AdminMiddleware] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}`);
        await ctx.telegram.sendVideo(targetUserId, ctx.message.video.file_id, {
          caption: 'üé¨ –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN:'
        });
        await ctx.reply(`‚úÖ –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}.`);

        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É VPN
        await ctx.telegram.sendMessage(
          targetUserId,
          '–ï—Å–ª–∏ –≤—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ VPN, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',
          Markup.inlineKeyboard([
            Markup.button.callback('‚úÖ –£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª', `vpn_configured_${targetUserId}`)
          ])
        );

      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}:`, error);
        await ctx.reply(`‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}.`);
      } finally {
        ctx.session.awaitingVpnVideoFor = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
      }
      return; // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    }

    // –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –æ–∂–∏–¥–∞—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
    if (ctx.message) {
      console.log(`[AdminMiddleware] –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–∂–∏–¥–∞–Ω–∏—è: ${JSON.stringify(ctx.message)}`);
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç—É—Ç –∫–∞–∫–æ–µ-—Ç–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
    }
  }
  return next(); // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É middleware –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
});

// ===== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ =====
bot.start(handleStart);
bot.command('myquestions', showUserQuestions); // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// !!! –í–ê–ñ–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è Reply Keyboard –î–û–õ–ñ–ù–´ –±—ã—Ç—å –ü–ï–†–ï–î –æ–±—â–∏–º bot.hears(/^[^\/].*/, handleQuestion);
// –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∏ –±—É–¥—É—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –≤–æ–ø—Ä–æ—Å.
bot.hears('üóì –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞', handleUserReplyKeyboard);
bot.hears('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', handleUserReplyKeyboard);
bot.hears('üí∞ –ü—Ä–æ–¥–ª–∏—Ç—å VPN', handleUserReplyKeyboard);
bot.hears('üìö –ú–æ–∏ –≤–æ–ø—Ä–æ—Å—ã', handleUserReplyKeyboard);

// –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–º–∞–Ω–¥/hears –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞
bot.hears(/^[^\/].*/, handleQuestion);

// === –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã ===
bot.command('check', checkPayments);
bot.command('stats', stats);
bot.command('questions', listQuestions); // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–æ–≤ –æ–ø–ª–∞—Ç—ã)
bot.on('photo', handlePhoto);

// ===== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ (callback_data) =====
// === –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∞ (Inline Keyboard) ===
bot.action(/approve_(\d+)/, handleApprove);
bot.action(/reject_(\d+)/, handleReject);
bot.action('list_questions', listQuestions);
bot.action('check_payments_admin', checkPayments);
bot.action('show_stats_admin', stats);

// –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞)
bot.action(/answer_(\d+)/, async (ctx) => {
  if (!checkAdmin(ctx)) {
    return ctx.answerCbQuery('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞');
  }
  ctx.session.awaitingAnswerFor = ctx.match[1]; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–≤–µ—á–∞–µ–º
  await ctx.reply('‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
  await ctx.answerCbQuery(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –∫–Ω–æ–ø–∫–∏
});

// –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (—Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏)
bot.action(/send_instruction_to_(\d+)/, async (ctx) => {
  if (!checkAdmin(ctx)) {
    return ctx.answerCbQuery('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞');
  }
  const targetUserId = ctx.match[1];
  // –ú—ã –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ handleApprove
  ctx.session.awaitingVpnVideoFor = targetUserId; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ
  await ctx.reply(`–ó–∞–≥—Ä—É–∑–∏—Ç–µ *–≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é* –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${targetUserId}:`);
  await ctx.answerCbQuery();
});

// === –ö–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Inline Keyboard) ===
// –≠—Ç–∏ –∫–Ω–æ–ø–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ `/start` –∏–ª–∏ `/check_subscription`)
// –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω—ã Reply Keyboard –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
bot.action('check_subscription', checkSubscriptionStatus);
bot.action('ask_question', promptForQuestion);
bot.action('extend_subscription', extendSubscription);
bot.action(/send_vpn_info_(\d+)/, requestVpnInfo); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ VPN –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏/–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
bot.action(/vpn_configured_(\d+)/, handleVpnConfigured); // –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN


// ===== Graceful shutdown (–∞–∫–∫—É—Ä–∞—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã) =====
// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
['SIGINT', 'SIGTERM'].forEach(signal => {
  process.once(signal, async () => {
    console.log(`üõë –ü–æ–ª—É—á–µ–Ω ${signal}, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–∞...`);
    try {
      await bot.stop(); // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ Telegraf
      console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      process.exit(0); // –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:', err);
      process.exit(1); // –í—ã—Ö–æ–¥ —Å –æ—à–∏–±–∫–æ–π
    }
  });
});