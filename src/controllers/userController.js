const User = require('../models/User');
const { Markup } = require('telegraf');
const { formatDate, paymentDetails } = require('../utils/helpers');
const wgService = require('../services/wireguardService'); // –ù–û–í–û–ï: –ò–º–ø–æ—Ä—Ç wgService
const { escapeMarkdown } = require('../utils/helpers'); // –î–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∞–¥–º–∏–Ω—É

// ... (–û—Å—Ç–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏ —ç–∫—Å–ø–æ—Ä—Ç—ã –Ω–µ –º–µ–Ω—è—é—Ç—Å—è) ...

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start.
 * –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–ø—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.handleStart = async (ctx) => {
    const { id, first_name, username } = ctx.from;

    try {
        const user = await User.findOneAndUpdate(
            { userId: id },
            { 
                userId: id,
                username: username || null,
                firstName: first_name || null
            },
            { upsert: true, new: true, setDefaultsOnInsert: true }
        );

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∏ –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ –æ–Ω–∞
        const hasActiveSubscription = user.status === 'active' && user.expireDate && user.expireDate > new Date();

        let welcomeMessage = `üëã –ü—Ä–∏–≤–µ—Ç, *${escapeMarkdown(first_name || username || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}*! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è VPN.\n\n`;
        let keyboard;

        if (hasActiveSubscription) {
            welcomeMessage += `üóì –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ *${formatDate(user.expireDate, true)}*.\n\n`;
            keyboard = Markup.inlineKeyboard([
                [Markup.button.callback('üóì –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å', 'check_subscription')],
                [Markup.button.callback('‚ûï –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'extend_subscription')],
                [Markup.button.callback('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'ask_question')]
            ]);
        } else {
            welcomeMessage += `–í—ã –µ—â—ë –Ω–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –∏–ª–∏ –æ–Ω–∞ –∏—Å—Ç–µ–∫–ª–∞. \n\n` +
                              `–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPN –∑–∞ *${process.env.VPN_PRICE} —Ä—É–±.* –≤ –º–µ—Å—è—Ü.\n\n` +
                              paymentDetails(id, first_name || username); // –ü–µ—Ä–µ–¥–∞—á–∞ –∏–º–µ–Ω–∏ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è

            keyboard = Markup.inlineKeyboard([
                [Markup.button.callback('‚ûï –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'extend_subscription')],
                [Markup.button.callback('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'ask_question')]
            ]);
        }

        await ctx.replyWithMarkdown(welcomeMessage, keyboard);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ handleStart:', error);
        await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.checkSubscriptionStatus = async (ctx) => {
    const { id, first_name, username } = ctx.from;

    try {
        const user = await User.findOne({ userId: id });

        if (!user) {
            return ctx.reply('‚ÑπÔ∏è –ú—ã –Ω–µ –Ω–∞—à–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–µ. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –ù–∞–∂–º–∏—Ç–µ /start.');
        }

        let message = `*–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:*\n\n`;
        let keyboard;

        const hasActiveSubscription = user.status === 'active' && user.expireDate && user.expireDate > new Date();
        
        if (hasActiveSubscription) {
            message += `‚úÖ *–ê–∫—Ç–∏–≤–Ω–∞*\n`;
            message += `–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ: *${formatDate(user.expireDate, true)}*\n\n`;
            message += `–ü—Ä–æ–¥–ª–∏—Ç–µ VPN –∑–∞ *${process.env.VPN_PRICE} —Ä—É–±.* –≤ –º–µ—Å—è—Ü.\n\n`;
            
            keyboard = Markup.inlineKeyboard([
                [Markup.button.callback('‚ûï –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'extend_subscription')],
                [Markup.button.callback('üìÅ –ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', `send_vpn_info_${id}`)],
                [Markup.button.callback('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'ask_question')]
            ]);

            // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫—É
            if (!user.vpnConfigured) {
                keyboard.reply_markup.inline_keyboard.push(
                    [Markup.button.callback('‚ùå –ù–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π', `vpn_failed_${id}`)]
                );
            }
            
        } else if (user.status === 'pending') {
            message += `‚è≥ *–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã*\n`;
            message += `–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.`;
            keyboard = Markup.inlineKeyboard([
                [Markup.button.callback('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'ask_question')]
            ]);
        } else {
            message += `üö´ *–ù–µ–∞–∫—Ç–∏–≤–Ω–∞* –∏–ª–∏ *–ò—Å—Ç–µ–∫–ª–∞*\n`;
            if (user.expireDate && user.expireDate <= new Date()) {
                message += `–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç—ë–∫: *${formatDate(user.expireDate, true)}*\n\n`;
            }
            message += `–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPN –∑–∞ *${process.env.VPN_PRICE} —Ä—É–±.* –≤ –º–µ—Å—è—Ü.\n\n` +
                       paymentDetails(id, first_name || username); // –ü–µ—Ä–µ–¥–∞—á–∞ –∏–º–µ–Ω–∏ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            keyboard = Markup.inlineKeyboard([
                [Markup.button.callback('‚ûï –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'extend_subscription')],
                [Markup.button.callback('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'ask_question')]
            ]);
        }

        await ctx.reply(message, { parse_mode: 'Markdown', ...keyboard, disable_web_page_preview: true });
        await ctx.answerCbQuery();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ checkSubscriptionStatus:', error);
        await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞');
    }
};

/**
 * –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ñ–æ—Ä–º–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.extendSubscription = async (ctx) => {
    const { id, first_name, username } = ctx.from;
    const user = await User.findOne({ userId: id });

    let message;
    let keyboard;

    if (user && user.status === 'pending') {
        message = `‚è≥ *–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã –∏ –æ–∂–∏–¥–∞–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.* –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø—Ä–æ–≤–µ—Ä–∫–∏.`;
        keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('üóì –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å', 'check_subscription')]
        ]);
    } else {
        message = `–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è/–ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ VPN:\n\n` +
                  `1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ *${process.env.VPN_PRICE} —Ä—É–±.* –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.\n` +
                  `2. *–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û* —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É.\n` +
                  `3. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ *—Å–∫—Ä–∏–Ω—à–æ—Ç* —á–µ–∫–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç.\n\n` +
                  paymentDetails(id, first_name || username);
        keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'ask_question')]
        ]);
    }
    
    await ctx.reply(message, { parse_mode: 'Markdown', ...keyboard, disable_web_page_preview: true });
    await ctx.answerCbQuery();
};

/**
 * –ü—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.promptForQuestion = async (ctx) => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –±–æ—Ç –æ–∂–∏–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ctx.session.awaitingQuestion = true; 
    await ctx.reply('‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. –Ø –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
    await ctx.answerCbQuery();
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥-—Ñ–∞–π–ª VPN –∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.requestVpnInfo = async (ctx) => {
    const userId = parseInt(ctx.match[1]);
    const user = await User.findOne({ userId });

    if (!user || user.status !== 'active') {
        await ctx.reply('‚ö†Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ.');
        return ctx.answerCbQuery();
    }

    // –ù–û–í–û–ï: –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç WG —É–∂–µ —Å–æ–∑–¥–∞–Ω, –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥
    if (user.wgClientId) {
        try {
            const fileBuffer = await wgService.getWgClientConfig(user.wgClientId);
            const qrCodeBuffer = await wgService.getWgClientQrCode(user.wgClientId);

            await ctx.telegram.sendDocument(
                userId,
                { source: fileBuffer, filename: `wg-config-${userId}.conf` },
                { caption: 'üìÅ –í–∞—à —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard (–ø–æ–≤—Ç–æ—Ä–Ω–æ):' }
            );
            await ctx.telegram.sendPhoto(
                userId,
                { source: qrCodeBuffer, filename: `wg-qr-${userId}.svg` },
                { caption: 'üì∏ QR-–∫–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WireGuard (–ø–æ–≤—Ç–æ—Ä–Ω–æ):' }
            );

            if (process.env.VPN_VIDEO_FILE_ID) {
                await ctx.telegram.sendVideo(
                    userId,
                    process.env.VPN_VIDEO_FILE_ID,
                    { caption: 'üé¨ –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN (–ø–æ–≤—Ç–æ—Ä–Ω–æ):' }
                );
            }

            await ctx.telegram.sendMessage(
                userId,
                '‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, QR-–∫–æ–¥ –∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å, –Ω–∞–∂–º–∏—Ç–µ "–ù–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π".',
                Markup.inlineKeyboard([
                    [
                        Markup.button.callback('‚úÖ –£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª', `vpn_configured_${userId}`),
                        Markup.button.callback('‚ùå –ù–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π', `vpn_failed_${userId}`)
                    ]
                ])
            );

            let userName = user.firstName || user.username || '–ë–µ–∑ –∏–º–µ–Ω–∏';
            if (user.username) {
                userName = `${userName} (@${user.username})`;
            }
            await ctx.telegram.sendMessage(
                process.env.ADMIN_ID,
                `üîî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} (ID: ${userId}) –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–æ—Å–∏–ª —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.`
            );

        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ WG-–∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è ${userId}:`, error);
            await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
            await ctx.telegram.sendMessage(
                process.env.ADMIN_ID,
                `üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ VPN-–∫–æ–Ω—Ñ–∏–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}: ${escapeMarkdown(error.message)}`
            );
        }
        return ctx.answerCbQuery();
    }

    // –ï—Å–ª–∏ wgClientId –µ—â–µ –Ω–µ—Ç (–æ—á–µ–Ω—å —Ä–µ–¥–∫–∏–π —Å–ª—É—á–∞–π –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è)
    // –∏–ª–∏ –µ—Å–ª–∏ –∞–¥–º–∏–Ω —Ö–æ—á–µ—Ç –≤—ã—Å–ª–∞—Ç—å –≤—Ä—É—á–Ω—É—é:
    let userName = user.firstName || user.username || '–ë–µ–∑ –∏–º–µ–Ω–∏';
    if (user.username) {
        userName = `${userName} (@${user.username})`;
    }
    await ctx.telegram.sendMessage(
        process.env.ADMIN_ID,
        `üîî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} (ID: ${userId}) –∑–∞–ø—Ä–æ—Å–∏–ª —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.\n` +
        `_wgClientId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤—ã–¥–∞—á–µ. –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ wg-easy._`,
        Markup.inlineKeyboard([
            [Markup.button.callback('‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', `send_instruction_to_${userId}`)]
        ])
    );

    await ctx.reply('‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–Ω –≤—ã—à–ª–µ—Ç –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
    await ctx.answerCbQuery();
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É VPN –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.handleVpnConfigured = async (ctx) => {
    const userId = parseInt(ctx.match[1]);
    if (ctx.from.id !== userId) {
        return ctx.answerCbQuery('–≠—Ç–æ –Ω–µ –¥–ª—è –≤–∞—Å.');
    }

    try {
        await User.findOneAndUpdate(
            { userId },
            { vpnConfigured: true, awaitingVpnTroubleshoot: false }
        );
        await ctx.reply('üëç –û—Ç–ª–∏—á–Ω–æ! –†–∞–¥—ã, —á—Ç–æ VPN —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö.');
        await ctx.answerCbQuery('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!');
        await ctx.deleteMessage(); // –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, error);
        await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞');
    }
};

/**
 * –ü—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π VPN.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.promptVpnFailure = async (ctx) => {
    const userId = parseInt(ctx.match[1]);
    if (ctx.from.id !== userId) {
        return ctx.answerCbQuery('–≠—Ç–æ –Ω–µ –¥–ª—è –≤–∞—Å.');
    }

    try {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –æ–∂–∏–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
        ctx.session.awaitingVpnTroubleshoot = userId; 
        await ctx.reply('üòû –ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–º–æ—â–∏.');
        await ctx.answerCbQuery('–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã');
        await ctx.deleteMessage(); // –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, error);
        await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞');
    }
};


// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ ---

/**
 * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.promptCancelSubscription = async (ctx) => {
    await ctx.reply(
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ VPN? –î–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω.',
        Markup.inlineKeyboard([
            [
                Markup.button.callback('‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å', 'cancel_subscription_final'),
                Markup.button.callback('‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å', 'cancel_subscription_abort')
            ]
        ])
    );
    await ctx.answerCbQuery();
};

/**
 * –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ WireGuard.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.cancelSubscriptionFinal = async (ctx) => {
    const userId = ctx.from.id;
    const user = await User.findOne({ userId });

    if (!user || user.status !== 'active') {
        await ctx.reply('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã.');
        return ctx.answerCbQuery();
    }

    try {
        await User.findOneAndUpdate(
            { userId },
            { 
                status: 'inactive', 
                expireDate: new Date(), // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â—É—é
                vpnConfigured: false,
                wgClientId: null // –û—á–∏—â–∞–µ–º WG Client ID
            }
        );

        // –ù–û–í–û–ï: –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ WireGuard –∏–∑ wg-easy
        if (user.wgClientId) {
            try {
                await wgService.deleteWgClient(user.wgClientId);
                console.log(`[cancelSubscriptionFinal] –ö–ª–∏–µ–Ω—Ç WireGuard ${user.wgClientId} —É–¥–∞–ª–µ–Ω –∏–∑ wg-easy.`);
            } catch (wgError) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ WG-Easy –∫–ª–∏–µ–Ω—Ç–∞ ${user.wgClientId}:`, wgError.message);
                await ctx.telegram.sendMessage(
                    process.env.ADMIN_ID,
                    `‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–∏—Ç—å VPN-–∫–ª–∏–µ–Ω—Ç–∞ ${user.wgClientId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ wg-easy –≤—Ä—É—á–Ω—É—é.\n` +
                    `–û—à–∏–±–∫–∞: ${escapeMarkdown(wgError.message)}`
                );
            }
        }

        await ctx.reply('‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞. –î–æ—Å—Ç—É–ø –∫ VPN –ø—Ä–µ–∫—Ä–∞—â–µ–Ω.');
        await ctx.answerCbQuery();
        await ctx.deleteMessage(); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

        let userName = user.firstName || user.username || '–ë–µ–∑ –∏–º–µ–Ω–∏';
        if (user.username) {
            userName = `${userName} (@${user.username})`;
        }
        await ctx.telegram.sendMessage(
            process.env.ADMIN_ID,
            `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} (ID: ${userId}) –æ—Ç–º–µ–Ω–∏–ª —Å–≤–æ—é –ø–æ–¥–ø–∏—Å–∫—É.`
        );

    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, error);
        await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞');
    }
};

/**
 * –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.cancelSubscriptionAbort = async (ctx) => {
    await ctx.reply('–û—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.');
    await ctx.answerCbQuery();
    await ctx.deleteMessage(); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
};