const { Markup } = require('telegraf');
const Question = require('../models/Question'); // –ú–æ–¥–µ–ª—å –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
const { checkAdmin } = require('./adminController'); // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∞
const { formatDate } = require('../utils/helpers'); // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å.
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–æ–ø—Ä–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.handleQuestion = async (ctx) => {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã (–Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å '/') –∏ –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  if (ctx.message.text.startsWith('/') || !ctx.message.text) return;
  
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤–æ–ø—Ä–æ—Å–∞ –≤ MongoDB
    await Question.create({
      userId: ctx.from.id,
      username: ctx.from.username,
      firstName: ctx.from.first_name,
      questionText: ctx.message.text,
      status: 'pending' // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞"
    });
    
    await ctx.reply('‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤–æ–º –≤–æ–ø—Ä–æ—Å–µ
    await notifyAdminAboutQuestion(ctx);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞:', err);
    await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å.');
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–º –ø–æ—Å—Ç—É–ø–∏–≤—à–µ–º –≤–æ–ø—Ä–æ—Å–µ.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –º–µ—Ç–æ–¥–∞–º Telegram).
 */
async function notifyAdminAboutQuestion(ctx) {
  try {
    await ctx.telegram.sendMessage(
      process.env.ADMIN_ID,
      `‚ùì –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç ${ctx.from.first_name} (@${ctx.from.username || '–Ω–µ—Ç'}):
"${ctx.message.text}"
ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${ctx.from.id}`,
      Markup.inlineKeyboard([
        [Markup.button.callback('üìù –û—Ç–≤–µ—Ç–∏—Ç—å', `answer_${ctx.from.id}`)], // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
        [Markup.button.callback('üëÄ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã', 'list_questions')] // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
      ])
    );
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞:', err);
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤–æ–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.handleAnswer = async (ctx) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
  if (!checkAdmin(ctx)) {
    return ctx.reply('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞.');
  }

  // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–≤–µ—á–∞–µ–º, –∏–∑ —Å–µ—Å—Å–∏–∏
  const userId = ctx.session.awaitingAnswerFor;
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const answerText = ctx.message.text;

  try {
    // –ù–∞—Ö–æ–¥–∏–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "pending"
    const question = await Question.findOneAndUpdate(
      { userId, status: 'pending' },
      {
        answerText,
        status: 'answered', // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "–æ—Ç–≤–µ—á–µ–Ω"
        answeredAt: new Date() // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
      },
      { new: true } // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    );

    if (!question) {
      return ctx.reply('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await ctx.telegram.sendMessage(
      userId,
      `üì© *–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:*\n"${answerText}"\n\n–í–∞—à –∏—Å—Ö–æ–¥–Ω—ã–π –≤–æ–ø—Ä–æ—Å: "${question.questionText}"`,
      { parse_mode: 'Markdown' } // –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    );

    await ctx.reply('‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.');
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –≤ —Å–µ—Å—Å–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    ctx.session.awaitingAnswerFor = null;
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å:', err);
    await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç.');
  }
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç–≤–µ—Ç–∞, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
 * @param {object} ctx - –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Telegraf.
 */
exports.listQuestions = async (ctx) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
  if (!checkAdmin(ctx)) {
    // –ï—Å–ª–∏ —ç—Ç–æ callbackQuery (–Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏), –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–µ–≥–æ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
    if (ctx.callbackQuery) {
        await ctx.answerCbQuery('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞.');
    }
    return ctx.reply('üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞.'); // –û—Ç–≤–µ—á–∞–µ–º –≤ —á–∞—Ç
  }

  // –ï—Å–ª–∏ —ç—Ç–æ callbackQuery, –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–µ–≥–æ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" —Å –∫–Ω–æ–ø–∫–∏
  // –∏ –¥–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –∑–∞–≥—Ä—É–∑–∫–µ.
  if (ctx.callbackQuery) {
      await ctx.answerCbQuery('–ó–∞–≥—Ä—É–∂–∞—é –≤–æ–ø—Ä–æ—Å—ã...');
  }

  try {
    // –ù–∞—Ö–æ–¥–∏–º –¥–æ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "pending", –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º)
    const questions = await Question.find({ status: 'pending' }).sort({ createdAt: -1 }).limit(10);
    
    if (!questions.length) {
      // –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
      return ctx.reply('‚ÑπÔ∏è –ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.');
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
    let message = 'üìã *–û–∂–∏–¥–∞—é—â–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤–æ–ø—Ä–æ—Å—ã:*\n\n';
    questions.forEach((q, i) => {
      message += `${i + 1}. *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* ${q.firstName} (@${q.username || '–Ω–µ—Ç'})\n`;
      message += `*–í–æ–ø—Ä–æ—Å:* "${q.questionText}"\n`;
      message += `*–î–∞—Ç–∞:* ${formatDate(q.createdAt)}\n\n`; // –ò—Å–ø–æ–ª—å–∑—É–µ–º formatDate –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π "–û–±–Ω–æ–≤–∏—Ç—å"
    await ctx.replyWithMarkdown(message, Markup.inlineKeyboard([
      [Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å', 'list_questions')]
    ]));
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤:', err);
    await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤.');
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —ç—Ç–æ –±—ã–ª callbackQuery, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ,
    // –Ω–æ –æ–±—ã—á–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≥–æ, —á—Ç–æ —É–∂–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ '–ó–∞–≥—Ä—É–∂–∞—é –≤–æ–ø—Ä–æ—Å—ã...'.
  }
};